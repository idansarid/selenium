from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
import time
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support.ui import Select
from selenium.webdriver.common.keys import Keys

driver = webdriver.Chrome(r'C:\chromedriver.exe')
driver.maximize_window()
driver.get("https://cejira.sandisk.com/")
actions = ActionChains(driver)

username = driver.find_element_by_id("login-form-username")
username.send_keys("1000263273")
password = driver.find_element_by_id("login-form-password")
password.send_keys("wfjGm45ra")
driver.find_element_by_id("login").click()
element = WebDriverWait(driver, 10).until(
    EC.presence_of_element_located((By.ID, "browse_link")))
driver.find_element_by_id("browse_link").click()
driver.get("https://cejira.sandisk.com/projects/AFMKT/issues")
element1 = WebDriverWait(driver, 10).until(
    EC.presence_of_element_located((By.ID, "find_link")))
driver.get("https://cejira.sandisk.com/issues/?filter=-1")
driver.find_element_by_id("create_link").click()
element2 = WebDriverWait(driver, 10).until(
    EC.presence_of_element_located((By.ID, "project-field")))
# all = driver.find_element_by_id("qf-field-picker-trigger")
# actions.move_to_element(all)
# all.click()
# element3 = WebDriverWait(driver, 10).until(
#     EC.presence_of_element_located((By.CLASS_NAME, "qf-unconfigurable")))
# all = driver.find_element_by_class_name("qf-unconfigurable")
# actions.move_to_element(all)
# all.click()
# configure_fields = driver.find_element_by_id("qf-field-picker-trigger")
# configure_fields.click()
issue_found_by = driver.find_element_by_id("customfield_11446")
actions.move_to_element(issue_found_by)
select = Select(issue_found_by)
select.select_by_visible_text('Validation-GB')
summary = driver.find_element_by_id("summary")
actions.move_to_element(summary)
summary.send_keys("[Model][EagleEBR]")
idb_program = driver.find_element_by_id("customfield_11448")
actions.move_to_element(idb_program)
select = Select(idb_program)
select.select_by_visible_text("iNAND-Eagle")
component = driver.find_element_by_id("components")
actions.move_to_element(component)
select = Select(component)
select.select_by_visible_text("Unknown")
labels = driver.find_element_by_id("labels-textarea")
actions.move_to_element(labels)
labels.send_keys("EagleEBR")
failure_phase = driver.find_element_by_id("customfield_11151")
actions.move_to_element(failure_phase)
select = Select(failure_phase)
select.select_by_visible_text("External Integration")
target = driver.find_element_by_id("assign-to-me-trigger")
actions.move_to_element(target)
target.click()
# create = driver.find_element_by_id("create-issue-submit").click()
# actions.move_to_element(create)
# create.click()

# # driver.execute_script("arguments[0].scrollIntoView();", ss)
# elem111 = driver.find_element_by_id("customfield_11448")
# driver.execute_script("arguments[0].scrollIntoView();", elem111)
# select = Select(elem111)
# select.select_by_visible_text("iNAND-SwiftPro")
# select = Select(driver.find_element_by_id("customfield_11365"))
# select.select_by_visible_text("S1-Limited ES Samples")
# select = Select(driver.find_element_by_id("priority"))
# select.select_by_visible_text("P1 - High")
# select = Select(driver.find_element_by_id("customfield_10563"))
# select.select_by_visible_text("External integrations")
# select = Select(driver.find_element_by_id("customfield_11151"))
# select.select_by_visible_text("External integration")
# driver.find_element_by_id("assign-to-me-trigger").click()
# driver.find_element_by_id("create-issue-submit").click()
# # driver.find_element_by_id("filter_lnk_my_lnk").click()